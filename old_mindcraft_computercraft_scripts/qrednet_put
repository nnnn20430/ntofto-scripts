local function getDeviceSide(deviceType)
  local lstSides = {"left","right","up","down","front","back"};
  for i, side in pairs(lstSides) do
    if (peripheral.isPresent(side)) then
      if (peripheral.getType(side) == string.lower(deviceType)) then
        return side;
      end
    end
  end -- for-do
  return nil;
end

function split(str, pat)
  local t = { }
  local fpat = "(.-)"..pat
  local last_end = 1
  local s, e, cap = str:find(fpat, 1)
  while s do
    if s ~= 1 or cap ~= "" then
      table.insert(t,cap)
    end
    last_end = e+1
    s, e, cap = str:find(fpat, last_end)
  end
  if last_end <= #str then
    cap = str:sub(last_end)
    table.insert(t, cap)
  end
  return t
end

local args = {...}

if #args ~= 2 then
  print("Usage: "..shell.getRunningProgram().." <name> <program>")
return  
end

local side = getDeviceSide("Modem")
rednet.open(side)
rednet.broadcast("!request_upload.!"..args[1])
local t = 0

print("Queueing Upload")
print("Press and hold 'Q' to stop.")
while true do
 t = t + 1
 n, message = rednet.receive(1)
 if message ~= nil then
 if string.find(message, "!request_upload_accepted.!") then break end end
 if t == 5 then
  rednet.broadcast("!request_upload.!"..args[1])
  t = 0
 end
 os.startTimer(0.3)
 local event,key = os.pullEvent()
 if key == 16 then
  rednet.close(side)
  return
 end
end

if message ~= nil then
sFile = args[2]
sPath = shell.resolve( sFile )
end
if fs.exists(sPath) then
local file = fs.open( sPath, "r" )
local sText = file.readAll()
file.close()
rednet.send(n, ""..tostring(sText))
local t = 0
while true do
 t = t + 1
 n, message = rednet.receive(1)
 if message ~= nil then
 if string.find(message, "!requested_upload_complete.!") then
  print("File '"..args[2].."' uploaded.")
 rednet.close(side)
 return
 end
 end
 if t == 5 then
 print("No response")
 print("Upload faild or Upload rejected")
 rednet.close(side)
 return
 end
end
end
rednet.close(side)